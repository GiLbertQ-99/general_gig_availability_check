name: general_gig_availability_check

on:
  workflow_dispatch: # Enables manual triggering of the workflow
  repository_dispatch: # Allows custom events to trigger the workflow
    types: [craigslist_alert]

jobs:
  autoresponder:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout your repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Download the Python script
      - name: Download script
        run: |
          curl -o general_gig_availability_check.py https://raw.githubusercontent.com/GiLbertQ-99/general_gig_availability_check/54243f105bb7887c2aa4a7f454e0d44f2e94fd37/general_gig_availability_check.py

      # Step 3      
      - name: Validate download
        run: cat general_gig_availability_check.py curl -f -o general_gig_availability_check.py https://raw.githubusercontent.com/GiLbertQ-99/general_gig_availability_check/54243f105bb7887c2aa4a7f454e0d44f2e94fd37/general_gig_availability_check.py

      # Step 4
      - name: Download script
        run: |
          curl -f -o general_gig_availability_check.py https://raw.githubusercontent.com/GiLbertQ-99/general_gig_availability_check/54243f105bb7887c2aa4a7f454e0d44f2e94fd37/general_gig_availability_check.py

      # Step 5
      - name: Validate download
        run: |
          ls -l general_gig_availability_check.py

      # Step 6: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Step 7: Install dependencies
      - name: Install dependencies
        run: |
          pip install -r requirements.txt || true  # Adjust as needed

      # Step 8: Run the downloaded script
      - name: Run auto-responder
        run: python general_gig_availability_check.py
